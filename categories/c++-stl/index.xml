<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>c&#43;&#43; stl on LaMelD&#39;s dev Story</title>
    <link>https://lameld.github.io/categories/c&#43;&#43;-stl/</link>
    <description>Recent content in c&#43;&#43; stl on LaMelD&#39;s dev Story</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 16 Nov 2019 20:08:14 +0900</lastBuildDate>
    
	<atom:link href="https://lameld.github.io/categories/c++-stl/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>[C&#43;&#43; STL] Queue</title>
      <link>https://lameld.github.io/study/stl_queue/</link>
      <pubDate>Sat, 16 Nov 2019 20:08:14 +0900</pubDate>
      
      <guid>https://lameld.github.io/study/stl_queue/</guid>
      <description>C++ STL Queue  내부적으로는 deque, list로 구성되어 있다. queue구조로 동작하도록 멤버 함수를 제공해준다. 헤더파일에 존재한다. std namespace를 사용하면 편리하다.  기본 생성자   기본 생성자 형식 : queue&amp;lt;[data type]&amp;gt; [변수이름] queue&amp;lt;int&amp;gt; q;queue&amp;lt;sting&amp;gt; q; 내부 컨테이너 구조를 바꾸는 생성자 형식 : queue&amp;lt;[data type], [container Type]&amp;gt; [변수이름]</description>
    </item>
    
    <item>
      <title>[C&#43;&#43; STL] Vector</title>
      <link>https://lameld.github.io/study/stl_vector/</link>
      <pubDate>Sat, 16 Nov 2019 20:08:14 +0900</pubDate>
      
      <guid>https://lameld.github.io/study/stl_vector/</guid>
      <description>vector는 자동으로 메모리가 할당되는 배열이라고 생각하면 됩니다. template를 사용하기 때문에 데이터 타입은 마음데로 넣을 수 있습니다. Stack과 비슷한 구조를 가지고 있으며, 맨 뒤에서 삽입과 삭제가 가능합니다. 중간의 값을 삭제하거나 삽입이 가능하지만, 배열기반이므로 삽입과 삭제가 빈번하게 일어난다면 효율이 떨어집니다.</description>
    </item>
    
  </channel>
</rss>