<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Welcome! on LaMelD&#39;s dev Story</title>
    <link>/</link>
    <description>Recent content in Welcome! on LaMelD&#39;s dev Story</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 30 Mar 2020 09:14:39 +0900</lastBuildDate>
    
	<atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>[Programmers][Kakao Blind 2018] 캐시</title>
      <link>/kakao/kko_blind_2018_cache/</link>
      <pubDate>Fri, 22 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>/kakao/kko_blind_2018_cache/</guid>
      <description>문제 출처 : https://programmers.co.kr/learn/courses/30/lessons/17680&amp;lt;/a&amp;gt;
  문제 설명
 캐시 교체 알고리즘은 LRU(Least Recently Used) 를 사용한다. cache hit 일 경우 실행시간은 1이다. cache miss 일 경우 실행시간은 5이다. 총 실행 시간을 출력한다.</description>
    </item>
    
    <item>
      <title>Install Hugo</title>
      <link>/docs/install-hugo/</link>
      <pubDate>Mon, 11 Feb 2019 19:27:37 +1000</pubDate>
      
      <guid>/docs/install-hugo/</guid>
      <description>To use this theme you will need to have Hugo installed. If you don&#39;t already have Hugo installed please follow the official installation guide
Check Hugo Version This theme uses Hugo Pipes to compile SCSS and minify assets.</description>
    </item>
    
    <item>
      <title>Install Theme</title>
      <link>/docs/install-theme/</link>
      <pubDate>Mon, 11 Feb 2019 19:27:37 +1000</pubDate>
      
      <guid>/docs/install-theme/</guid>
      <description>Create a new Hugo site hugo new site mynewsiteThis will create a fresh Hugo site in the folder mynewsite.
Install theme Copy or git clone this theme into the sites themes folder mynewsite/themes</description>
    </item>
    
    <item>
      <title>Configuration</title>
      <link>/docs/configure/</link>
      <pubDate>Mon, 11 Feb 2019 19:30:08 +1000</pubDate>
      
      <guid>/docs/configure/</guid>
      <description>Syntax highlighting and menus can be configured via &lt;code&gt;config.toml&lt;/code&gt;.</description>
    </item>
    
    <item>
      <title>Specimen</title>
      <link>/docs/specimen/</link>
      <pubDate>Mon, 11 Feb 2019 19:27:37 +1000</pubDate>
      
      <guid>/docs/specimen/</guid>
      <description>Markdown Test Page  Headings Paragraphs Blockquotes Lists Horizontal rule Table Code Inline elements   Headings Heading one Sint sit cillum pariatur eiusmod nulla pariatur ipsum. Sit laborum anim qui mollit tempor pariatur nisi minim dolor.</description>
    </item>
    
    <item>
      <title>Hugo Whisper</title>
      <link>/docs/example/</link>
      <pubDate>Mon, 11 Feb 2019 19:27:37 +1000</pubDate>
      
      <guid>/docs/example/</guid>
      <description>&lt;p&gt;Whisper is a minimal documentation theme built for Hugo. The design &amp;amp; functionality is intentionally minimal.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>[CLOUD] Hardware Linux</title>
      <link>/study/cloud_hw_linux/</link>
      <pubDate>Thu, 16 Jan 2020 13:35:04 +0900</pubDate>
      
      <guid>/study/cloud_hw_linux/</guid>
      <description>HW운영관리 :: Linux 200116 Thursday ~ 2001?? ????sday </description>
    </item>
    
    <item>
      <title>[CLOUD] Hardware Linux Basic</title>
      <link>/study/cloud_hw_linux_basic/</link>
      <pubDate>Mon, 13 Jan 2020 10:31:27 +0900</pubDate>
      
      <guid>/study/cloud_hw_linux_basic/</guid>
      <description>HW운영관리 :: Linux 기초 200116 Thurday ~ 200116 Thursday  1. Linux(리눅스)   리눅스란?
 컴퓨터 운영체제의 한 종류 윈도우와는 다르게 오픈 소스 운영체제 소스코드가 공개되어 있기 때문에 다양한 리눅스 기반의 운영체제가 존재  구글의 안드로이드도 리눅스를 기반으로 만든 운영체제      운영체제란?</description>
    </item>
    
    <item>
      <title>[CLOUD] Network Device</title>
      <link>/study/cloud_nw_device/</link>
      <pubDate>Mon, 06 Jan 2020 09:34:37 +0900</pubDate>
      
      <guid>/study/cloud_nw_device/</guid>
      <description>네트워크 장비 200106 Monday ~ 200110 Friday berryz web share ip :: http://192.168.0.100 (사설 IP)
berryz web share ip :: http://121.140.73.126 (공인 IP)
복습 :: http://www.ddarahakit.kro.kr
 1. 계층별 장비와 케이블   계층 별 장비</description>
    </item>
    
    <item>
      <title>[CLOUD] Network</title>
      <link>/study/cloud_nw/</link>
      <pubDate>Tue, 31 Dec 2019 13:23:21 +0900</pubDate>
      
      <guid>/study/cloud_nw/</guid>
      <description>네트워크 191230 Monday ~ 200103 Friday berryz web share ip :: http://192.168.0.100 (사설 IP)
berryz web share ip :: http://121.140.73.126 (공인 IP)
복습 :: http://www.ddarahakit.kro.kr -&amp;gt; kro.kr 도메인은 무료?
   기본적으로 알아야 할 컴퓨터 기초</description>
    </item>
    
    <item>
      <title>[SW Expert Academy][D4] 2819</title>
      <link>/swea/swea_2819/</link>
      <pubDate>Fri, 29 Nov 2019 17:38:30 +0900</pubDate>
      
      <guid>/swea/swea_2819/</guid>
      <description>문제 출처
  문제 설명
 4 x 4 크기의 격자판이 있다. 격자판의 각 격자칸에는 0부터 9사이의 숫자가 적혀 있다. 격자판의 임의의 위치에서 시작한다. 동서남북 네 방향으로 인접한 격자로 총 6회 이동하여 각 칸에 숫자를 차례로 이어 붙인다.</description>
    </item>
    
    <item>
      <title>[C&#43;&#43; STL] Queue</title>
      <link>/study/stl_queue/</link>
      <pubDate>Sat, 16 Nov 2019 20:08:14 +0900</pubDate>
      
      <guid>/study/stl_queue/</guid>
      <description>C++ STL Queue  내부적으로는 deque, list로 구성되어 있다. queue구조로 동작하도록 멤버 함수를 제공해준다. 헤더파일에 존재한다. std namespace를 사용하면 편리하다.  기본 생성자   기본 생성자 형식 : queue&amp;lt;[data type]&amp;gt; [변수이름] queue&amp;lt;int&amp;gt; q;queue&amp;lt;sting&amp;gt; q; 내부 컨테이너 구조를 바꾸는 생성자 형식 : queue&amp;lt;[data type], [container Type]&amp;gt; [변수이름]</description>
    </item>
    
    <item>
      <title>[C&#43;&#43; STL] Vector</title>
      <link>/study/stl_vector/</link>
      <pubDate>Sat, 16 Nov 2019 20:08:14 +0900</pubDate>
      
      <guid>/study/stl_vector/</guid>
      <description>vector는 자동으로 메모리가 할당되는 배열이라고 생각하면 됩니다. template를 사용하기 때문에 데이터 타입은 마음데로 넣을 수 있습니다. Stack과 비슷한 구조를 가지고 있으며, 맨 뒤에서 삽입과 삭제가 가능합니다. 중간의 값을 삭제하거나 삽입이 가능하지만, 배열기반이므로 삽입과 삭제가 빈번하게 일어난다면 효율이 떨어집니다.</description>
    </item>
    
    <item>
      <title>[Data Structure] Array</title>
      <link>/study/ds_array/</link>
      <pubDate>Fri, 15 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>/study/ds_array/</guid>
      <description>Array(배열)  정적 배열 (Static Array)  기본적인 배열을 의미한다. C++에서 간단하게 선언이 가능하다.     1차원
 int arr0[3];int arr1[10] = { 0, };int arr2 = { 1,2,3,4 }; 2차원</description>
    </item>
    
    <item>
      <title>[Data Structure] Queue</title>
      <link>/study/ds_queue/</link>
      <pubDate>Fri, 15 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>/study/ds_queue/</guid>
      <description>Queue(큐) 1. 개념  Queue는 FIFO(First In First Out)의 원리로 동작하는 자료구조이다. 동일한 자료의 집합을 다룬다는 면에서 Stack과 비슷하지만 가장 먼저 들어간 자료가 가장 늦게 나온다는 점이 다르다. 넣은 순서대로 자료를 꺼내가므로 순서대로 처리해야 하는 자료를 임시작으로 저장하는 용도로 흔히 사용한다.</description>
    </item>
    
    <item>
      <title>[Data Structure] Single Linked List</title>
      <link>/study/ds_linkedlist/</link>
      <pubDate>Fri, 15 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>/study/ds_linkedlist/</guid>
      <description>Single Linked List (단순 연결 리스트) 1. 개념  하나의 노드에 필요한 정보를 담고 다음에 해당하는 노드를 가리키고 있는 자료구조로 포인터를 이용해 자료들을 선형으로 연결한 자료구조이다. [ 배열 ] 과 비교했을 때 추가 및 삭제가 쉽다는 장점이 있지만 접근할 때 O(n)만큼 걸린다는 단점이 있습니다.</description>
    </item>
    
    <item>
      <title>[Data Structure] Stack</title>
      <link>/study/ds_stack/</link>
      <pubDate>Fri, 15 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>/study/ds_stack/</guid>
      <description>Stack(스택) 1. 개념  가장 늦게 들어간 자료가 가장 먼저 나가는 구조이다. 후입선출(LIFO, Last In First Out)이라고도 부른다. Stack에 데이터를 넣는 행동을 push, 데이터를 빼는 행동을 pop이라 한다. Stack의 가장 위 데이터를 가르키는 포인터를 top이라고 한다.</description>
    </item>
    
  </channel>
</rss>