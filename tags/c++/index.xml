<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>c&#43;&#43; on LaMelD&#39;s Dev Life</title>
    <link>https://lameld.github.io/tags/c&#43;&#43;/</link>
    <description>Recent content in c&#43;&#43; on LaMelD&#39;s Dev Life</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>UTF-8</language>
    <lastBuildDate>Sun, 24 Nov 2019 18:15:23 +0900</lastBuildDate>
    
	<atom:link href="https://lameld.github.io/tags/c++/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>[Programmers][Kakao Blind 2019] 매칭 점수</title>
      <link>https://lameld.github.io/post/kko_blind_2019_matching/</link>
      <pubDate>Sun, 24 Nov 2019 18:15:23 +0900</pubDate>
      
      <guid>https://lameld.github.io/post/kko_blind_2019_matching/</guid>
      <description>카카오 블라인드 테스트 2018 - 매칭 점수 문제 출처 : https://programmers.co.kr/learn/courses/30/lessons/42893
 문제 설명
 한 웹페이지에 대해서 기본점수, 외부 링크 수, 링크점수, 매칭점수를 구할 수 있다. 기본점수 : 텍스트 중에 검색어가 등장한 횟수(대소문자 무시) 외부 링크 수 : 다른 외부 페이지로 연결된 링크의 개수 링크점수 : ( 해당 웹페이지로 걸린 다른 웹페이지의 기본점수 ) / ( 외부링크 수) 의 합 매칭점수 : 기본점수 + 링크점수 매칭점수가 높은 웹페이지의 번호를 리턴한다.</description>
    </item>
    
    <item>
      <title>[Programmers][Kakao Blind 2019] 후보키</title>
      <link>https://lameld.github.io/post/kko_blind_2019_key/</link>
      <pubDate>Sun, 24 Nov 2019 18:15:02 +0900</pubDate>
      
      <guid>https://lameld.github.io/post/kko_blind_2019_key/</guid>
      <description>카카오 블라인드 테스트 2018 - 후보키 문제 출처 : https://programmers.co.kr/learn/courses/30/lessons/42890
 문제 설명
 후보키 : 유일성과 최소성을 만족하는 것을 후보키(Candidate Key)라고 한다. 테이블이 주어졌을 때 후보키의 최대 갯수를 구한다.    유일성(uniqueness)
릴레이션에 있는 모든 튜플에 대해 유일하게 식별되어야 한다.</description>
    </item>
    
    <item>
      <title>[Programmers][Kakao Blind 2018] 뉴스 클러스터링</title>
      <link>https://lameld.github.io/post/kko_blind_2018_news/</link>
      <pubDate>Sun, 24 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://lameld.github.io/post/kko_blind_2018_news/</guid>
      <description>카카오 블라인드 테스트 2018 - 뉴스 클러스터링 문제 출처 : https://programmers.co.kr/learn/courses/30/lessons/17677
 문제 설명
 자카드 유사도  집합 A = { 1, 2, 3 }, 집합 B = { 2, 3, 4 } A ∩ B = { 2, 3 } A ∪ B = { 1, 2, 3, 4 } J(A, B) = 2 / 4 자카드 유사도는 0.</description>
    </item>
    
    <item>
      <title>[Programmers][Kakao Blind 2019] 블록 게임</title>
      <link>https://lameld.github.io/post/kko_blind_2019_block/</link>
      <pubDate>Sun, 24 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://lameld.github.io/post/kko_blind_2019_block/</guid>
      <description>카카오 블라인드 테스트 2018 - 블록게임 문제 출처 : https://programmers.co.kr/learn/courses/30/lessons/42894
 문제 설명
 아래와 같이 12가지 모양의 블록이 배치되어 있다.  1x1 크기의 검은 블록을 떨어뜨려 기존에 놓인 블록을 합해 속이 꽉 채워진 직사각형을 만들어 그 블록을 없앨 수 있다.</description>
    </item>
    
    <item>
      <title>[Programmers][Kakao Blind 2019] 실패율</title>
      <link>https://lameld.github.io/post/kko_blind_2019_fail/</link>
      <pubDate>Sun, 24 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://lameld.github.io/post/kko_blind_2019_fail/</guid>
      <description>카카오 블라인드 테스트 2018 - 실패율 문제 출처 : https://programmers.co.kr/learn/courses/30/lessons/42889
 문제 설명
 실패율 = A / B  A : 스테이지에 도달했으나 클리어하지 못한 플레이어 수 B : 스테이지에 도달한 플레이어 수  B가 0인 경우 실패율은 0으로 정의한다.</description>
    </item>
    
    <item>
      <title>[Programmers][Kakao Blind 2018] 비밀지도</title>
      <link>https://lameld.github.io/post/kko_blind_2018_secret/</link>
      <pubDate>Sat, 23 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://lameld.github.io/post/kko_blind_2018_secret/</guid>
      <description>카카오 블라인드 테스트 2018 - 비밀지도 문제 출처 : https://programmers.co.kr/learn/courses/30/lessons/17681
 문제 설명  지도는 한 변의 길이가 n 인 정사각형 배열 형태로, 각 칸은 공백 또는 &amp;ldquo;#&amp;ldquo;으로 이루어져 있다. 전체 지도는 두 장의 지도를 겹쳐서 얻을 수 있다. 지도A, 지도B 두 지도는 각각 정수 배열로 암호화 되어 있다.</description>
    </item>
    
    <item>
      <title>[Programmers][Kakao Blind 2018] 추석 트래픽</title>
      <link>https://lameld.github.io/post/kko_blind_2018_traffic/</link>
      <pubDate>Sat, 23 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://lameld.github.io/post/kko_blind_2018_traffic/</guid>
      <description>카카오 블라인드 테스트 2018 - 추석 트래픽 문제 출처 : https://programmers.co.kr/learn/courses/30/lessons/17676
 처리량의 변화가 어디서 일어나는지 알아내는 것에 어려움이 있었다. 큰 문제를 작은 문제로 나누어 풀어나간다는 것에 초점을 두고 하나의 로그데이터를 살펴보았을 때 어디서 처리량의 변화가 일어나는지 확인하였다. 이 과정에서 시간이 정말 오래걸렸다.</description>
    </item>
    
    <item>
      <title>[Programmers][Kakao Blind 2018] 캐시</title>
      <link>https://lameld.github.io/post/kko_blind_2018_cache/</link>
      <pubDate>Fri, 22 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://lameld.github.io/post/kko_blind_2018_cache/</guid>
      <description>카카오 블라인드 테스트 2018 - 캐시 문제 출처 : https://programmers.co.kr/learn/courses/30/lessons/17680
 문제 설명
 캐시 교체 알고리즘은 LRU(Least Recently Used) 를 사용한다. cache hit 일 경우 실행시간은 1이다. cache miss 일 경우 실행시간은 5이다. 총 실행 시간을 출력한다.   문제 풀이</description>
    </item>
    
    <item>
      <title>[Programmers][Kakao Blind 2018] 셔틀버스</title>
      <link>https://lameld.github.io/post/kko_blind_2018_shuttle/</link>
      <pubDate>Fri, 22 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://lameld.github.io/post/kko_blind_2018_shuttle/</guid>
      <description>카카오 블라인드 테스트 2018 - 셔틀버스 문제 출처 : https://programmers.co.kr/learn/courses/30/lessons/17678
 문제 설명
 셔틀은 09:00 부터 총 n 회 t 분 간격으로 역에 도착하며, 하나의 셔틀에는 최대 m 명의 승객이 탈 수 있다. 셔틀은 도착했을 때 도착한 순간 대기열에 선 크루까지 포함해서 대기 순서대로 태우고 바로 출발한다.</description>
    </item>
    
    <item>
      <title>[Programmers][Kakao Blind 2018] 다트 게임</title>
      <link>https://lameld.github.io/post/kko_blind_2018_dart/</link>
      <pubDate>Thu, 21 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://lameld.github.io/post/kko_blind_2018_dart/</guid>
      <description>카카오 블라인드 테스트 2018 - 다트 게임 문제 출처 : https://programmers.co.kr/learn/courses/30/lessons/17682
 규칙
 다트 게임은 총 3번의 기회로 구성된다. 각 기회마다 얻을 수 있는 점수는 0 ~ 10점까지이다. 점수와 함께 S(점수의 1승), D(점수의 2승), T(점수의 3승)가 주어진다. 옵션으로 *(해당 점수와 이전에 얻은 점수를 각각 2배로 한다), #(해당 점수를 마이너스한다)이 존재한다.</description>
    </item>
    
    <item>
      <title>[Programmers][Kakao Blind 2018] 프렌즈 4 블록</title>
      <link>https://lameld.github.io/post/kko_blind_2018_friendsblock/</link>
      <pubDate>Thu, 21 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://lameld.github.io/post/kko_blind_2018_friendsblock/</guid>
      <description>카카오 블라인드 테스트 2018 - 프렌즈 4 블록 문제 출처 : https://programmers.co.kr/learn/courses/30/lessons/17679
 같은 모양의 카카오프렌즈 블록이 2×2 형태로 4개가 붙어있을 경우 사라지면서 점수를 얻는 게임이다.     풀이  왼쪽 상단부터 오른쪽 하단까지 지울 수 2x2 형태로 4개가 붙어있는 경우를 탐색한다.</description>
    </item>
    
    <item>
      <title>[Data Structure] Array</title>
      <link>https://lameld.github.io/post/ds_array/</link>
      <pubDate>Fri, 15 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://lameld.github.io/post/ds_array/</guid>
      <description>Array(배열)  정적 배열 (Static Array)  기본적인 배열을 의미한다. C++에서 간단하게 선언이 가능하다.     1차원
int arr0[3]; int arr1[10] = { 0, }; int arr2 = { 1,2,3,4 };  2차원
int arr0[3][7]; int arr1[10][10] = { { 0, }, }; int arr2 = { { 1,2}, { 3,4 } };  3차원 이상의 배열도 [ ]를 추가하여 선언이 가능하다.</description>
    </item>
    
    <item>
      <title>[Data Structure] Queue</title>
      <link>https://lameld.github.io/post/ds_queue/</link>
      <pubDate>Fri, 15 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://lameld.github.io/post/ds_queue/</guid>
      <description>Queue(큐) 1. 개념  Queue는 FIFO(First In First Out)의 원리로 동작하는 자료구조이다. 동일한 자료의 집합을 다룬다는 면에서 Stack과 비슷하지만 가장 먼저 들어간 자료가 가장 늦게 나온다는 점이 다르다. 넣은 순서대로 자료를 꺼내가므로 순서대로 처리해야 하는 자료를 임시작으로 저장하는 용도로 흔히 사용한다.</description>
    </item>
    
    <item>
      <title>[Data Structure] Single Linked List</title>
      <link>https://lameld.github.io/post/ds_linkedlist/</link>
      <pubDate>Fri, 15 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://lameld.github.io/post/ds_linkedlist/</guid>
      <description>Single Linked List (단순 연결 리스트) 1. 개념  하나의 노드에 필요한 정보를 담고 다음에 해당하는 노드를 가리키고 있는 자료구조로 포인터를 이용해 자료들을 선형으로 연결한 자료구조이다. [ 배열 ] 과 비교했을 때 추가 및 삭제가 쉽다는 장점이 있지만 접근할 때 O(n)만큼 걸린다는 단점이 있습니다.</description>
    </item>
    
    <item>
      <title>[Data Structure] Stack</title>
      <link>https://lameld.github.io/post/ds_stack/</link>
      <pubDate>Fri, 15 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://lameld.github.io/post/ds_stack/</guid>
      <description>Stack(스택) 1. 개념  가장 늦게 들어간 자료가 가장 먼저 나가는 구조이다. 후입선출(LIFO, Last In First Out)이라고도 부른다. Stack에 데이터를 넣는 행동을 push, 데이터를 빼는 행동을 pop이라 한다. Stack의 가장 위 데이터를 가르키는 포인터를 top이라고 한다.  
 2.</description>
    </item>
    
  </channel>
</rss>